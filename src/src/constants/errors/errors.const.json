{
  "authErrors": {
    "incorrectCredentials": {
      "code": "AUTH001",
      "message": "Incorrect email or password"
    },
    "emailRequired": {
      "code": "AUTH002",
      "message": "Email is required"
    },
    "passwordRequired": {
      "code": "AUTH003",
      "message": "Password is required"
    },
    "userNotExist": {
      "code": "AUTH004",
      "message": "User does not exist"
    },
    "passwordConfirmRequired": {
      "code": "AUTH005",
      "message": "Password confirm is required"
    },
    "passwordNotMatch": {
      "code": "AUTH006",
      "message": "Password does not match"
    },
    "codeNotValid": {
      "code": "AUTH007",
      "message": "Code is not valid"
    },
    "validatePassword": {
      "code": "AUTH008",
      "message": "The password is not secure"
    },
    "codeRequired": {
      "code": "AUTH009",
      "message": "Code is required"
    },
    "idRequired": {
      "code": "AUTH010",
      "message": "ID is required"
    },
    "tokenInvalid": {
      "code": "AUTH011",
      "message": "Token invalid"
    },
    "nickNameRequired": {
      "code": "AUTH012",
      "message": "The nickName is required"
    },
    "nickNameSize": {
      "code": "AUTH013",
      "message": "The nickName must have a maximum of 100 characters"
    },
    "emailOrNickNameRequired": {
      "code": "AUTH014",
      "message": "Email or nickName is required"
    },
    "passwordCharacter": {
      "code": "AUTH015",
      "message": "The password must have a minimum of 8 character and a maximum of 30 characters"
    },
    "passwordIncorrect": {
      "code": "AUTH016",
      "message": "Incorrect password"
    },
    "queryErrors": {
      "generateJWTError": {
        "code": "AUTH_001",
        "message": "Something went wrong"
      }
    }
  },
  "userErrors": {
    "nameRequired": {
      "code": "USRL001",
      "message": "The name is required"
    },
    "nameCharacter": {
      "code": "USRL002",
      "message": "The name must have a minimum of 1 character and a maximum of 50 characters"
    },
    "valueToFilterIsRequired": {
      "code": "USRL003",
      "message": "The value to filter is required"
    },
    "idRequired": {
      "code": "USRL004",
      "message": "the ID is required"
    },
    "noToken": {
      "code": "USRL005",
      "message": "The token is missing from the request"
    },
    "userNotExist": {
      "code": "USRL006",
      "message": "User does not exist"
    },
    "lastNameRequired": {
      "code": "USRL007",
      "message": "The last name is required"
    },
    "lastNameCharacter": {
      "code": "USRL008",
      "message": "The lastName must have a minimum of 1 character and a maximum of 50 characters"
    },
    "phoneNumberRequired": {
      "code": "USRL009",
      "message": "The phone number is required"
    },
    "phoneNumberCharacter": {
      "code": "USRL010",
      "message": "The phone number must have a minimum of 1 character and a maximum of 12 characters"
    },
    "validatePassword": {
      "code": "USRL011",
      "message": "The password is not secure"
    },
    "adminRole": {
      "code": "USRL012",
      "message": "This action can only be performed by administrator users"
    },
    "userNoDelete": {
      "code": "USRL013",
      "message": "Can't delete User"
    },
    "idDocumentTypeRequired": {
      "code": "USRL013",
      "message": "The document type is required"
    },
    "idDocumentTypeInvalid": {
      "code": "USRL014",
      "message": "The document type invalid"
    },
    "idMunicipalityInvalid": {
      "code": "USRL015",
      "message": "The municipality invalid"
    },
    "idRoleRequired": {
      "code": "USRL016",
      "message": "The rol is required"
    },
    "idRoleInvalid": {
      "code": "USRL017",
      "message": "The rol is invalid"
    },
    "numberDocumentRequired": {
      "code": "USRL018",
      "message": "The number document is required"
    },
    "numberDocumentCharacter": {
      "code": "USRL019",
      "message": "The number document must have a minimum of 1 character and a maximum of 20 characters"
    },
    "idIndicativePhoneRequired": {
      "code": "USRL020",
      "message": "The indicative number is required"
    },
    "idIndicativePhoneInvalid": {
      "code": "USRL021",
      "message": "The indicative phone invalid"
    },
    "idIndicativeNumberPhoneWhatsAppRequired": {
      "code": "USRL022",
      "message": "The id Indicative Number Phone WhatsApp is required"
    },
    "numberPhoneWhatsAppRequired": {
      "code": "USRL023",
      "message": "The number Phone WhatsApp is required"
    },
    "addressRequired": {
      "code": "USRL024",
      "message": "The address is required"
    },
    "emailOrNickNameAlreadyExist": {
      "code": "USRL025",
      "message": "The nickName or email already exist"
    },
    "filterValueIsEmpty": {
      "code": "USRL026",
      "message": "Filter value is empty"
    },
    "queryErrors": {
      "findAllError": {
        "code": "USRL_001",
        "message": "Something went wrong"
      },
      "findError": {
        "code": "USRL_002",
        "message": "Something went wrong"
      },
      "createError": {
        "code": "USRL_003",
        "message": "Something went wrong"
      },
      "updateError": {
        "code": "USRL_004",
        "message": "Something went wrong"
      }
    }
  },
  "documentTypeErrors":{
    "nameRequired": {
      "code": "DOCT001",
      "message": "The document type name is required"
    },
    "nameSize": {
      "code": "DOCT002",
      "message": "The document type name must be at least 2 characters long"
    },
    "queryErrors":{
      "createError": {
        "code": "DOCT_001",
        "message": "Something went wrong"
      },
      "updateError": {
        "code": "DOCT_002",
        "message": "Something went wrong"
      },
      "findAllError": {
        "code": "DOCT_003",
        "message": "Something went wrong"
      },
      "deleteError": {
        "code": "DOCT_004",
        "message": "Something went wrong"
      }
    }
  },
  "indicativeNumberErrors":{
    "numberRequired":{
      "code": "INDN001",
      "message": "The code number is required"
    },
    "numberSize":{
      "code": "INDN002",
      "message": "The code number must have a minimum length of 1 character and a maximum length of 10 character"
    },
    "countryRequired":{
      "code": "INDN003",
      "message": "The country is required"
    },
    "countrySize":{
      "code": "INDN004",
      "message": "The country must have a minimum length of 1 character and a maximum length of 50 characters"
    },
    "queryErrors": {
      "createError": {
        "code": "INDN_001",
        "message": "Something went wrong"
      },
      "updateError": {
        "code": "INDN_002",
        "message": "Something went wrong"
      },
      "findAllError": {
        "code": "INDN_003",
        "message": "Something went wrong"
      },
      "deleteError": {
        "code": "INDN_004",
        "message": "Something went wrong"
      }
    }
  },
  "departmentErrors":{
    "nameRequired": {
      "code": "DEPT001",
      "message": "Department name is required"
    },
    "nameSize": {
      "code": "DEPT002",
      "message": "The department name must have a minimum of 1 character and a maximum of 30 characters"
    },
    "queryErrors":{
      "createError": {
        "code": "DEPT_001",
        "message": "Something went wrong"
      },
      "updateError": {
        "code": "DEPT_002",
        "message": "Something went wrong"
      },
      "findAllError": {
        "code": "DEPT_003",
        "message": "Something went wrong"
      },
      "deleteError": {
        "code": "DEPT_004",
        "message": "Something went wrong"
      }
    }
  },
  "municipalityErrors":{
    "nameRequired": {
      "code": "MUNI001",
      "message": "Municipality name is required"
    },
    "nameSize": {
      "code": "MUNI002",
      "message": "The municipality must have a minimum length of 1 character and a maximum length of 50 characters"
    },
    "departmentRequired":{
      "code": "MUNI003",
      "message": "Department is required"
    },
    "departmentAlreadyExist": {
      "code": "MUNI004",
      "message": "The department already exist"
    },
    "queryErrors":{
      "createError": {
        "code": "MUNI_001",
        "message": "Something went wrong"
      },
      "updateError": {
        "code": "MUNI_002",
        "message": "Something went wrong"
      },
      "findAllError": {
        "code": "MUNI_003",
        "message": "Something went wrong"
      },
      "deleteError": {
        "code": "MUNI_004",
        "message": "Something went wrong"
      }
    }
  },
  "paymentMethodErrors":{
    "nameRequired": {
      "code": "PAYM001",
      "message": "Payment method name is required"
    },
    "nameSize": {
      "code": "PAYM002",
      "message": "The Payment method name must have a minimum length of 1 character and a maximum length of 100 characters"
    },
    "queryErrors":{
      "createError": {
        "code": "PAYM_001",
        "message": "Something went wrong"
      },
      "updateError": {
        "code": "PAYM_002",
        "message": "Something went wrong"
      },
      "findAllError": {
        "code": "PAYM_003",
        "message": "Something went wrong"
      },
      "deleteError": {
        "code": "PAYM_004",
        "message": "Something went wrong"
      }
    }
  },
  "unitMeasureErrors":{
    "nameRequired": {
      "code": "UNMS001",
      "message": "Unit measure name is required"
    },
    "nameSize": {
      "code": "UNMS002",
      "message": "The unit measure name must have a minimum length of 1 character and a maximum length of 100 characters"
    },
    "queryErrors":{
      "errorCreateUnitMeasure": {
        "code": "UNMS_001",
        "message": "Something went wrong"
      },
      "updateError": {
        "code": "UNMS_002",
        "message": "Something went wrong"
      },
      "finAllError": {
        "code": "UNMS_003",
        "message": "Something went wrong"
      },
      "deleteError": {
        "code": "UNMS_004",
        "message": "Something went wrong"
      }
    }
  },
  "shippingTypeErrors":{
    "nameRequired": {
      "code": "SHPT001",
      "message": "Shipping type name is required"
    },
    "nameSize": {
      "code": "SHPT002",
      "message": "The Shipment Type name must have a minimum length of 1 character and a maximum length of 100 characters"
    },
    "queryErrors":{
      "createError": {
        "code": "SHPT_001",
        "message": "Something went wrong"
      },
      "updateError": {
        "code": "SHPT_002",
        "message": "Something went wrong"
      },
      "findAllError": {
        "code": "SHPT_003",
        "message": "Something went wrong"
      },
      "errorError": {
        "code": "SHPT_004",
        "message": "Something went wrong"
      }
    }
  },
  "adminErrors": {
    "nickNameRequired": {
      "code": "ADMI001",
      "message": "Nick name is required"
    },
    "nickNameSize": {
      "code": "ADMI002",
      "message": "The administrator's name must have a minimum length of 1 character and a maximum length of 100 characters"
    },
    "emailRequired":{
      "code": "ADMI003",
      "message": "Email is required"
    },
    "emailInvalid":{
      "code": "ADMI004",
      "message": "Email is invalid"
    },
    "emailSize":{
      "code": "ADMI005",
      "message": "The email must have a minimum length of 6 character and a maximum length of 100 characters"
    },
    "passwordRequired":{
      "code": "ADMI006",
      "message": "Password is required"
    },
    "passwordSize":{
      "code": "ADMI007",
      "message": "The password must have a minimum length of 6 character and a maximum length of 10 characters"
    },
    "queryErrors": {
      "createError": {
        "code": "ADMI_001",
        "message": "Something went wrong"
      },
      "updateError": {
        "code": "ADMI_002",
        "message": "Something went wrong"
      },
      "findError": {
        "code": "ADMI_003",
        "message": "Something went wrong"
      }
    }
  },
  "clientErrors": {
    "numberPhoneWhatsappRequired": {
      "code": "CLIEN001",
      "message": "Number phone whatsapp is required"
    },
    "emailRequired": {
      "code": "CLIEN002",
      "message": "Email is required"
    },
    "addressRequired": {
      "code": "CLIEN003",
      "message": "Address is required"
    },
    "idIndicativePhoneWhatsAppRequired": {
      "code": "CLIEN004",
      "message": "The indicative number WhatsApp is required"
    },
    "idIndicativePhoneWhatsAppInvalid": {
      "code": "CLIEN005",
      "message": "The indicative number WhatsApp invalid"
    },
    "idMunicipalityRequired": {
      "code": "CLIEN006",
      "message": "The municipality is required"
    },
    "idMunicipalityInvalid": {
      "code": "CLIEN007",
      "message": "The municipality invalid"
    },
    "queryErrors": {
      "findAllError": {
        "code": "CLIEN_001",
        "message": "Something went wrong"
      },
      "findError": {
        "code": "CLIEN_002",
        "message": "Something went wrong"
      },
      "createError": {
        "code": "CLIEN_003",
        "message": "Something went wrong"
      },
      "updateError": {
        "code": "CLIEN_004",
        "message": "Something went wrong"
      }
    }
  },
  "driverErrors":{
    "nickNameRequired": {
      "code": "DRIV001",
      "message": "Nick name is required"
    },
    "emailRequired":{
      "code": "DRIV002",
      "message": "Email is required"
    },
    "passwordRequired":{
      "code": "DRIV003",
      "message": "Password is required"
    },
    "lengthNickName": {
      "code": "DRIV004",
      "message": "The nickName must have a minimum length of 1 character and a maximum length of 100 characters"
    },
    "emailInvalid":{
      "code": "DRIV005",
      "message": "Email is invalid"
    },
    "lengthPassword":{
      "code": "DRIV006",
      "message": "The password must have a minimum length of 6 characters and a maximum length of 10 characters"
    },
    "driverNotExist":{
      "code": "DRIV007",
      "message": "Driver does not exist"
    },
    "queryErrors": {
      "create": {
        "code": "DRIV_001",
        "message": "Something went wrong"
      },
      "findError": {
        "code": "DRIV_002",
        "message": "Something went wrong"
      },
      "updateError": {
        "code": "DRIV_003",
        "message": "Something went wrong"
      }
    }
  },
  "coordinatorErrors":{
    "nickNameRequired": {
      "code": "COOR001",
      "message": "Nick name is required"
    },
    "lengthNickName": {
      "code": "COOR002",
      "message": "The coordinator name must have a minimum of 1 character and a maximum of 100 characters"
    },
    "emailRequired":{
      "code": "COOR003",
      "message": "Email is required"
    },
    "emailInvalid":{
      "code": "COOR004",
      "message": "Email is invalid"
    },
    "passwordRequired":{
      "code": "COOR005",
      "message": "Password is required"
    },
    "passwordInvalid":{
      "code": "COOR006",
      "message": "Password is invalid"
    },
    "queryErrors": {
      "createError": {
        "code": "COOR_001",
        "message": "Something went wrong"
      },
      "updateError": {
        "code": "COOR_002",
        "message": "Something went wrong"
      },
      "findError": {
        "code": "COOR_003",
        "message": "Something went wrong"
      }
    }
  },
  "sellerErrors": {
    "nickNameRequired": {
      "code": "SELL001",
      "message": "Nick name is required"
    },
    "nickNameSize": {
      "code": "SELL002",
      "message": "The seller name must have a minimum of 1 character and a maximum of 100 characters"
    },
    "emailRequired":{
      "code": "SELL003",
      "message": "Email is required"
    },
    "emailInvalid":{
      "code": "SELL004",
      "message": "Email is invalid"
    },
    "emailSize": {
      "code": "SELL005",
      "message": "The email must have a minimum length of 6 character and a maximum length of 100 characters"
    },
    "passwordRequired":{
      "code": "SELL006",
      "message": "Password is required"
    },
    "passwordSize": {
      "code": "SELL007",
      "message": "The password must have a minimum length of 6 character and a maximum length of 10 characters"
    },
    "queryErrors": {
      "createError": {
        "code": "SELL_001",
        "message": "Something went wrong"
      },
      "updateError": {
        "code": "SELL_002",
        "message": "Something went wrong"
      },
      "findError": {
        "code": "SELL_003",
        "message": "Something went wrong"
      },
      "": {
        "code": "SELL_004",
        "message": "Something went wrong"
      },
      "getPrefixesOfResolutionByBankSellerError": {
        "code": "SELL_005",
        "message": "Something went wrong"
      }
    }
  },
  "vehicleErrors": {
    "plateRequired": {
      "code": "VEHI001",
      "message": "The license plate number of the vehicle is required"
    },
    "plateSize": {
      "code": "VEHI002",
      "message": "The vehicle license plate entered must have a minimum length of 4 characters and a maximum length of 6 characters"
    },
    "plateAlreadyExists": {
      "code": "VEHI003",
      "message": "The plate already exists"
    },
    "municipalityRequired": {
      "code": "VEHI004",
      "message": "The municipality is required"
    },
    "municipalityDoesNotExist": {
      "code": "VEHI005",
      "message": "The municipality does not exist"
    },
    "markRequired": {
      "code": "VEHI006",
      "message": "The vehicle brand is invalid"
    },
    "modelRequired": {
      "code": "VEHI007",
      "message": "Vehicle model is required"
    },
    "priceRequired": {
      "code": "VEHI008",
      "message": "The default fare is required"
    },
    "priceInvalid": {
      "code": "VEHI009",
      "message": "The price entered is invalid"
    },
    "seatingMatrixRequired": {
      "code": "VEHI010",
      "message": "Vehicle seating matrix is required"
    },
    "heightInvalid": {
      "code": "VEHI011",
      "message": "Vehicle height is invalid"
    },
    "widthInvalid": {
      "code": "VEHI012",
      "message": "Vehicle width is invalid"
    },
    "vehicleDoesNotExist": {
      "code": "VEHI013",
      "message": "The vehicle does not exist"
    },
    "queryErrors": {
      "createdError": {
        "code": "VEHI_001",
        "message": "Something went wrong"
      },
      "findError": {
        "code": "VEHI_002",
        "message": "Something went wrong"
      },
      "deleteError": {
        "code": "VEHI_003",
        "message": "Something went wrong"
      }
    }
  },
  "seatRuler":{
    "vehicleHasNoAssignedSeats": {
      "code": "STRL001",
      "message": "The selected vehicle has no assigned seats"
    },
    "queryErrors": {
      "createdError": {
        "code": "STRL_001",
        "message": "Something went wrong"
      },
      "findError": {
        "code": "STRL_002",
        "message": "Something went wrong"
      }
    }
  },
  "observationErrors": {
    "idInvoiceRequired": {
      "code": "OBSR001",
      "message": "The invoice is required"
    },
    "descriptionRequired": {
      "code": "OBSR002",
      "message": "The description is required"
    },
    "queryErrors": {
      "createError": {
        "code": "OBSR_001",
        "message": "Something went wrong"
      },
      "findAllError": {
        "code": "OBSR_002",
        "message": "Something went wrong"
      }
    }
  },
  "roleErrors": {
    "typeSize": {
      "code": "ROLE001",
      "message": "The value of the type field must be an integer in the range 0 to 255"
    },
    "roleAlreadyExists": {
      "code": "ROLE002",
      "message": "The role type already exists"
    },
    "queryErrors": {
      "createError": {
        "code": "ROLE_001",
        "message": "Something went wrong"
      },
      "findAllError": {
        "code": "ROLE_002",
        "message": "Something went wrong"
      }
    }
  },
  "functionalityErrors": {
    "nameRequired": {
      "code": "FNCT001",
      "message": "the name is required"
    },
    "nameSize": {
      "code": "FNCT002",
      "message": "The functionality name must have a length of at least 1 character and a maximum of 10 characters"
    },
    "nameAlreadyExists": {
      "code": "FNCT003",
      "message": "The name already exists"
    },
    "queryErrors": {
      "createError": {
        "code": "FNCT_001",
        "message": "Something went wrong"
      },
      "findAllError": {
        "code": "FNCT_002",
        "message": "Something went wrong"
      },
      "updateError": {
        "code": "FNCT_003",
        "message": "Something went wrong"
      },
      "deleteError": {
        "code": "FNCT_004",
        "message": "Something went wrong"
      }
    }
  },
  "driverVehicleErrors":{
    "queryErrors":{
      "createError":{
        "code": "DVVH_001",
        "message": "Something went wrong"
      }
    }
  },
  "travelErrors":{
    "idDriverRequired": {
      "code": "TRVL001",
      "message": "The driver is required"
    },
    "idDriverInvalid": {
      "code": "TRVL002",
      "message": "The driver is invalid"
    },
    "driverNotExist":{
      "code": "TRVL003",
      "message": "Driver does not exist"
    },
    "idVehicleRequired": {
      "code": "TRVL004",
      "message": "The vehicle is required"
    },
    "idVehicleInvalid": {
      "code": "TRVL005",
      "message": "The vehicle is invalid"
    },
    "vehicleDoesNotExist": {
      "code": "TRVL006",
      "message": "The vehicle does not exist"
    },
    "idRouteRequired": {
      "code": "TRVL007",
      "message": "The route is required"
    },
    "idRouteInvalid": {
      "code": "TRVL008",
      "message": "The route is invalid"
    },
    "routeDoesNotExist": {
      "code": "TRVL009",
      "message": "The route does not exist"
    },
    "invalidDate": {
      "code": "TRVL010",
      "message": "The date is invalid"
    },
    "invalidTime": {
      "code": "TRVL011",
      "message": "The time is invalid"
    },
    "idTravelInvalid": {
      "code": "TRVL012",
      "message": "The travel is invalid"
    },
    "travelDoesNotExist": {
      "code": "TRVL013",
      "message": "The travel does not exist"
    },
    "dateRequired": {
      "code": "TRVL014",
      "message": "The date is required"
    },
    "hourRequired": {
      "code": "TRVL015",
        "message": "The hour is required"
    },
    "queryErrors":{
      "createError":{
        "code": "TRVL_001",
        "message": "Something went wrong"
      },
      "findError":{
        "code": "TRVL_002",
        "message": "Something went wrong"
      },
      "updateError":{
        "code": "TRVL_003",
        "message": "Something went wrong"
      },
      "deleteError":{
        "code": "TRVL_004",
        "message": "Something went wrong"
      }
    }
  },
  "routeErrors":{
    "municipalityDepartRequired":{
      "code": "ROUT001",
      "message": "The municipality depart is required"
    },
    "sameMunicipalityOfArrival":{
      "code": "ROUT002",
      "message": "The municipality of departure must not be the same as the municipality of arrival"
    },
    "municipalityDepartDoesNotExist":{
      "code": "ROUT003",
      "message": "The outgoing municipality does not exist"
    },
    "municipalityArriveRequired":{
      "code": "ROUT004",
      "message": "The municipality of arrival is required"
    },
    "municipalityArriveDoesNotExist":{
      "code": "ROUT005",
      "message": "The municipality of arrival does not exist"
    },
    "queryErrors": {
      "createError": {
        "code": "ROUT_001",
        "message": "Something went wrong"
      },
      "findAllError": {
        "code": "ROUT_002",
        "message": "Something went wrong"
      },
      "findHeadquarterByMunicipalitySourceError": {
        "code": "ROUT_003",
        "message": "Something went wrong"
      }
    }
  },
  "seatErrors":{
    "idSeatInvalid": {
      "code": "SEAT001",
      "message": "The seat is invalid"
    },
    "seatDoesNotExist": {
      "code": "SEAT002",
      "message": "The seat does not exist"
    },
    "seatNotAvailable": {
      "code": "SEAT003",
      "message": "the seat is no longer available"
    },
    "queryErrors": {
      "createError": {
        "code": "SEAT_001",
        "message": "Something went wrong"
      },
      "findAllError": {
        "code": "SEAT_002",
        "message": "Something went wrong"
      },
      "updateError": {
        "code": "SEAT_003",
        "message": "Something went wrong"
      }
    }
  },
  "serviceTypeErrors": {
    "queryErrors": {
      "createError": {
        "code": "SVCT_001",
        "message": "Something went wrong"
      },
      "findAllError": {
        "code": "SVCT_002",
        "message": "Something went wrong"
      },
      "updateError": {
        "code": "SVCT_003",
        "message": "Something went wrong"
      }
    }
  },
  "ticketErrors": {
    "passengerNameRequired": {
      "code": "TICK001",
      "message": "The passenger is required"
    },
    "namePassengerSize": {
      "code": "TICK002",
      "message": "The nickName must have a maximum of 100 characters"
    },
    "numberPhoneRequired": {
      "code": "TICK003",
      "message": "The number phone is required"
    },
    "phoneNumberCharacter": {
      "code": "TICK004",
      "message": "The phone number must have a minimum of 1 character and a maximum of 12 characters"
    },
    "idSeatRequired": {
      "code": "TICK005",
      "message": "The id seat is required"
    },
    "idSeatWrong": {
      "code": "TICK006",
      "message": "The id seat wrong"
    },
    "idSeatNotExist": {
      "code": "TICK007",
      "message": "The seat not exist"
    },
    "clientNotExist": {
      "code": "TICK008",
      "message": "User client does not exist"
    },
    "queryErrors": {
      "createError": {
        "code": "TICK_001",
        "message": "Something went wrong"
      },
      "findAllError": {
        "code": "TICK_002",
        "message": "Something went wrong"
      },
      "updateError": {
        "code": "TICK_003",
        "message": "Something went wrong"
      }
    }
  },
  "invoiceErrors": {
    "ticketsRequired": {
      "code": "INVO001",
      "message": "The tickets is required"
    },
    "paymentMethodRequired": {
      "code": "INVO002",
      "message": "The payment method is required"
    },
    "priceRequired": {
      "code": "INVO003",
      "message": "The price is required"
    },
    "invoiceRequired": {
      "code": "INVO004",
      "message": "The invoice is required"
    },
    "invoiceNotGenerated": {
      "code": "INVO005",
      "message": "error when trying to display the generated invoice"
    },
    "sellerNotExist": {
      "code": "INVO006",
      "message": "User seller does not exist"
    },
    "clientRequired": {
      "code": "INVO007",
      "message": "The client is required"
    },
    "clientNotExist": {
      "code": "INVO008",
      "message": "User client does not exist"
    },
    "thereAreNoActiveResolutions": {
      "code": "INVO009",
      "message": "There are no active resolutions for invoice creation"
    },
    "resolutionsAlreadyUsedAllPrefixes": {
      "code": "INVO010",
      "message": "Current resolutions already used all prefixes"
    },
    "processTypeForInvoiceSynchronizationDoesNotExist": {
      "code": "INVO011",
      "message": "Process type for invoice synchronization does not exist"
    },
    "queryErrors": {
      "createError": {
        "code": "INVO_001",
        "message": "Something went wrong"
      },
      "findAllError": {
        "code": "INVO_002",
        "message": "Something went wrong"
      },
      "updateError": {
        "code": "INVO_003",
        "message": "Something went wrong"
      },
      "findAllJobError": {
        "code": "INVO_004",
        "message": "Something went wrong"
      },
      "updateJobError": {
        "code": "INVO_005",
        "message": "Something went wrong"
      }
    }
  },
  "shippingErrors": {
    "paymentMethodRequired": {
      "code": "SHPG001",
      "message": "The payment method not exist"
    },
    "paymentMethodNotExist": {
      "code": "SHPG002",
      "message": "The payment method is required"
    },
    "weightRequired": {
      "code": "SHPG003",
      "message": "The weight is required"
    },
    "depthRequired": {
      "code": "SHPG004",
      "message": "The depth is required"
    },
    "widthRequired": {
      "code": "SHPG005",
      "message": "The width is required"
    },
    "highRequired": {
      "code": "SHPG006",
      "message": "The high is required"
    },
    "declaredValueRequired": {
      "code": "SHPG007",
      "message": "The declared value is required"
    },
    "insuranceCostRequired": {
      "code": "SHPG008",
      "message": "The insurance cost is required"
    },
    "clientReceivesRequired": {
      "code": "SHPG009",
      "message": "The client receives is required"
    },
    "clientReceivesNotExist": {
      "code": "SHPG010",
      "message": "The client receives not exist"
    },
    "contentRequired": {
      "code": "SHPG011",
      "message": "The content is required"
    },
    "isHomeDeliveryRequired": {
      "code": "SHPG012",
      "message": "The home delivery value is required"
    },
    "isHomeDeliveryInvalidValue": {
      "code": "SHPG013",
      "message": "The home delivery invalid value"
    },
    "shippingTypeNotExist": {
      "code": "SHPG014",
      "message": "The shipping type not exist"
    },
    "shippingTypeRequired": {
      "code": "SHPG015",
      "message": "The shipping type is required"
    },
    "unitMeasureRequired": {
      "code": "SHPG016",
      "message": "The unit measure is required"
    },
    "unitMeasureNotExist": {
      "code": "SHPG017",
      "message": "The unit measure not exist"
    },
    "valueToFilterIsRequired": {
      "code": "SHPG018",
      "message": "The value to filter is required"
    },
    "filterValueIsEmpty": {
      "code": "SHPG019",
      "message": "Filter value is empty"
    },
    "costShippingRequired": {
      "code": "SHPG020",
      "message": "The shipping cost is required"
    },
    "filterValueInvalid": {
      "code": "SHPG021",
      "message": "Filter value invalid"
    },
    "queryErrors": {
      "createError": {
        "code": "SHPG_001",
        "message": "Something went wrong"
      }
    }
  },
  "shipmentTrackingErrors": {
    "queryErrors": {
      "createError": {
        "code": "SHTK_001",
        "message": "Something went wrong"
      },
      "findShipmentTrackingByIdInvoiceError": {
        "code": "SHTK_002",
        "message": "Something went wrong"
      }
    }
  },
  "moneyTransferTrackerErrors": {
    "queryErrors": {
      "createError": {
        "code": "MTTR_001",
        "message": "Something went wrong"
      }
    }
  },
  "trackingStatusErrors": {
    "queryErrors": {
      "createError": {
        "code": "TKST_001",
        "message": "Something went wrong"
      },
      "findTrackingStatusByPositionOfGroupError": {
        "code": "TKST_002",
        "message": "Something went wrong"
      }
    }
  },
  "moneyTransferErrors": {
    "amountMoneyRequired": {
      "code": "MNEY001",
      "message": "The money transfer amount money is required"
    },
    "costRequired": {
      "code": "MNEY002",
      "message": "The money transfer cost is required"
    },
    "ivaRequired": {
      "code": "MNEY003",
      "message": "The money transfer iva is required"
    },
    "queryErrors": {
      "createError": {
        "code": "MNEY_001",
        "message": "Something went wrong"
      }
    }
  },
  "resolutionErrors": {
    "idRouteRequired": {
      "code": "RSLT001",
      "message": "The route is required"
    },
    "TNSPrefixRequired": {
      "code": "RSLT002",
      "message": "The TNS prefix is required"
    },
    "TNSPrefixInvalid": {
      "code": "RSLT003",
      "message": "The TNS prefix is invalid"
    },
    "DIANPrefixRequired": {
      "code": "RSLT004",
      "message": "The DIAN prefix is required"
    },
    "currentConsecutiveRequired": {
      "code": "RSLT005",
      "message": "The current consecutive is required"
    },
    "numberRequired": {
      "code": "RSLT006",
      "message": "The number resolution is required"
    },
    "numberInvalid": {
      "code": "RSLT007",
      "message": "The number resolution is invalid"
    },
    "initialRangeRequired": {
      "code": "RSLT008",
      "message": "The initial range of resolution is required"
    },
    "finalRangeRequired": {
      "code": "RSLT009",
      "message": "The final range of resolution is required"
    },
    "rangesInvalid": {
      "code": "RSLT010",
      "message": "The resolution ranges are invalid"
    },
    "dateResolutionRequired": {
      "code": "RSLT011",
      "message": "The date resolution is required"
    },
    "dateResolutionInvalid": {
      "code": "RSLT012",
      "message": "The date resolution is invalid"
    },
    "codeBankRequired": {
      "code": "RSLT013",
      "message": "The code bank is required"
    },
    "codeBankInvalid": {
      "code": "RSLT014",
      "message": "The code bank is invalid"
    },
    "idRouteInvalid": {
      "code": "RSLT015",
      "message": "The id route is invalid"
    },
    "idServiceTypeRequired": {
      "code": "RSLT016",
      "message": "The service type is required"
    },
    "routeNotExist": {
      "code": "RSLT017",
      "message": "The route not exist"
    },
    "headquarterNotExist": {
      "code": "RSLT018",
      "message": "The headquarter not exist"
    },
    "headquarterInvalid": {
      "code": "RSLT019",
      "message": "The id route is invalid"
    },
    "serviceTypeNotExist": {
      "code": "RSLT020",
      "message": "The service type not exist"
    },
    "serviceTypeInvalid": {
      "code": "RSLT020",
      "message": "The service type is invalid"
    },
    "TNSPrefixAlreadyExists": {
      "code": "RSLT021",
      "message": "The TNS prefix already exists"
    },
    "DIANPrefixAlreadyExists": {
      "code": "RSLT022",
      "message": "The DIAN prefix already exists"
    },
    "bankNotExist": {
      "code": "RSLT023",
      "message": "The bank not exist"
    },
    "bankAssociatedByHeadquarterIsInvalid": {
      "code": "RSLT024",
      "message": "The bank associated by headquarter is invalid"
    },
    "queryErrors": {
      "createError": {
        "code": "RSLT_001",
        "message": "Something went wrong"
      },
      "findAllError": {
        "code": "RSLT_002",
        "message": "Something went wrong"
      }
    }
  },
  "bankErrors": {
    "queryErrors": {
      "findAllError": {
        "code": "BNNK_001",
        "message": "Something went wrong"
      },
      "findBankAssociatedByHeadquarterError": {
        "code": "BNNK_002",
        "message": "Something went wrong"
      }
    }
  },
  "prefixErrors": {
    "queryErrors": {
      "createError": {
        "code": "PRFX_001",
        "message": "Something went wrong"
      },
      "findAllError": {
        "code": "PRFX_002",
        "message": "Something went wrong"
      },
      "updateError": {
        "code": "PRFX_003",
        "message": ""
      }
    }
  },
  "appErrors":{
    "letterIsRequired": {
      "code": "APCT001",
      "message": "Letter is required"
    },
    "": {
      "code": "APCT002",
      "message": ""
    },
    "servicesErrors":{
      "requestBodyToSendIsInvalid": {
        "code": "APCT-001",
        "message": "Something went wrong"
      },
      "responseReceivedWithoutStatusFailed": {
        "code": "APCT-002",
        "message": "Something went wrong",
        "description": "Contact support lions.team@wiedii.co"
      },
      "responseReceivedStatusFailed": {
        "code": "APCT-003",
        "message": "Something went wrong",
        "description": "Contact support lions.team@wiedii.co"
      },
      "responseStatusFailed": {
        "code": "APCT-004",
        "message": "Something went wrong",
        "description": "Contact support lions.team@wiedii.co"
      },
      "responseErrorAxiosFound": {
        "code": "APCT-005",
        "message": "Something went wrong",
        "description": "Contact support lions.team@wiedii.co"
      },
      "requestNeverReceived": {
        "code": "APCT-006",
        "message": "Something went wrong",
        "description": "Contact support lions.team@wiedii.co"
      },
      "responseOtherFail": {
        "code": "APCT-007",
        "message": "Something went wrong",
        "description": "Contact support lions.team@wiedii.co"
      }
    }
  }
}